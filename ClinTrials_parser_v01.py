#!/usr/bin/env conda run -n ct_extract_env python


import pandas as pd
import os
import json


def parse_edges(data_folder):
    filename = "ClinTrials_KG_edges_v01_3.csv"
    filepath = os.path.join(data_folder, filename)
    attribute_source = "infores:biothings-multiomics-clinicaltrials"
    attribute_data_source = "infores:aact"

    edges = pd.read_csv(filepath, sep='\t')
    for index, row in edges.iterrows():
        id_dict = {}
        subject_dict = {}
        association_dict = {}
        object_dict = {}

        # id generated by concatenating the following: numbers from nctid, CUI of subject, CUI of object
        id_dict["_id"] = "{}_{}_{}".format(row["nctid"].split("NCT")[1], row["subject"].split(':')[1], row["object"].split(':')[1])

        subject_dict["{}".format(row["subject"].split(':')[0])] = "{}".format(row["subject"].split(':')[1])
        subject_dict["name"] = row["subject_name"]
        # subject_dict["{}_semantic_types".format(row["subject"].split(':')[0])] = "TBD" # fix in next version
        subject_dict["type"] = "Disease"

        association_dict["predicate"] = "{}".format(row["predicate"].split(':')[1])
        # association_dict["provided_by"] = row["provided_by"]  # uncomment out when re-running full data
        # association_dict["provenance"] = row["provenance"]  # uncomment out when re-running full data
        association_dict["edge_attributes"] = []
        association_dict["edge_attributes"].append({"attribute_type_id":"clinicaltrials_id","value":row["nctid"]})
        # association_dict["edge_attributes"].append({"attribute_type_id": "biolink:original_subject", "value": "movement disorders"})  # input original queried subject string instead of "movement disorders"
        # association_dict["edge_attributes"].append({"attribute_type_id": "biolink:original_object", "value": "physical activity"})   # input original queried object string instead of "physical activity"
        association_dict["edge_attributes"].append({"attribute_type_id":"biolink:biolink:aggregator_knowledge_source", "value":"infores:biothings-multiomics-clinicaltrials"})
        association_dict["edge_attributes"].append({"attribute_type_id": "biolink:primary_knowledge_source", "value": "infores:aact"})

        sources_dict["
        object_dict["{}".format(row["object"].split(':')[0])] = "{}".format(row["object"].split(':')[1])
        object_dict["name"] = row["object_name"]
        object_dict["type"] = "Treatment"
        # object_dict["{}_semantic_types".format(row["object"].split(':')[0])] = "TBD" # fix in next version

        id_dict["subject"] = subject_dict
        id_dict["association"] = association_dict
        id_dict["object"] = object_dict
        id_dict["edge_sources"] = [
            {
                "resource_id": attribute_source,
                "resource_role": "primary_knowledge_source"
            },
            {
                "resource_id": attribute_data_source,
                "resource_role": "supporting_data_source"
            }
        ]

        # print(json.dumps(id_dict, indent=2)) # uncomment for testing

        # yield the JSON one by one
        yield id_dict # comment for testing

# data_folder = "./outputs" # uncomment for testing
# parse_edges(data_folder) # uncomment for testings

